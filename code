# prompt: generte code for air quality prediction for decision tree model using user data set

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
# Replace 'your_dataset.csv' with the actual filename
data = pd.read_csv('air quality (2).csv')

# Select features and target variable
# Replace 'feature1', 'feature2', etc. with your actual feature column names
# Replace 'target_variable' with your actual target variable column name
X = data[['CO(GT)', 'PT08.S1(CO)', 'NMHC(GT)','NOx(GT)', 'PT08.S3(NOx)','RH']]
y = data['T']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the decision tree model
model = DecisionTreeRegressor(random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')

# You can now use the trained model to make predictions on new data
# For example:
# new_data = pd.DataFrame({'feature1': [value1], 'feature2': [value2], 'feature3': [value3]})
# prediction = model.predict(new_data)
# print(f'Prediction: {prediction}')
